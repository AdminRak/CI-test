# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:

    runs-on: [ ubuntu-latest ]
#     env:
#      http_proxy: 'http://proxy.esl.cisco.com:8080'
#      https_proxy: 'http://proxy.esl.cisco.com:8080' 
#      no_proxy: '*.cisco.com,cisco.com'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
        
      - uses: actions/setup-python@v2
        with:
          python-version: 3.10.8
       
      - name: cache poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.1.12-0
        
      - uses: snok/install-poetry@v1
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true
#         env:
#           http_proxy: 'http://proxy.esl.cisco.com:8080'
#           https_proxy: 'http://proxy.esl.cisco.com:8080' 
#           no_proxy: '*.cisco.com,cisco.com'


      - name: cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: poetry install --no-interaction

      - name: Run pytest
        run: CML_HOST='192.168.1.5' CML_USER='admin' CML_PASS='cmlroolz' PYTHONPATH=src/ poetry run python -m pytest -v --cov=src/ tests/
        working-directory: tests
